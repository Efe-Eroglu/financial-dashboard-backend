// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Kullanıcı giriş yapar ve JWT döndürür",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Kullanıcı Girişi",
                "parameters": [
                    {
                        "description": "Kullanıcı giriş bilgileri",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Yeni bir kullanıcı kaydı yapar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Kullanıcı Kaydı",
                "parameters": [
                    {
                        "description": "Kullanıcı bilgileri",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "Veritabanındaki tüm haberleri listeler",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Haberleri Listele",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/stocks": {
            "get": {
                "description": "Veritabanındaki tüm hisse senetlerini listeler",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Hisse Senetlerini Listele",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Stock"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Veritabanındaki tüm kullanıcıları listeler",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Kullanıcıları Listele",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/watchlist": {
            "get": {
                "description": "Veritabanındaki tüm izleme listesini listeler",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WatchList"
                ],
                "summary": "İzleme Listesini Listele",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Watchlist"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.News": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "headline": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "published_at": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "stock_symbol": {
                    "type": "string"
                }
            }
        },
        "models.Stock": {
            "type": "object",
            "properties": {
                "change_percentage": {
                    "type": "number"
                },
                "high_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "low_price": {
                    "type": "number"
                },
                "market_cap": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "previous_close_price": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password_hash": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Watchlist": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "stock_symbol": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Financial Dashboard API",
	Description:      "REST API for Financial Dashboard",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
